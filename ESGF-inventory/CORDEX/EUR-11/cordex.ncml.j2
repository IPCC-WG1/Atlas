<?xml version="1.0" encoding="UTF-8"?>
{% set localpath = ('GLOBALS', 'localpath') %}
{% set variable = ('GLOBALS', '_DRS_variable') %}
{% set size = ('GLOBALS', 'size') %}
{% set frequency = ('GLOBALS', '_DRS_Dfrequency') %}
<netcdf xmlns="http://www.unidata.ucar.edu/namespaces/netcdf/ncml-2.2">
  <remove name="tracking_id" type="attribute" />
  <remove name="variable_id" type="attribute" />
  <remove name="version" type="attribute" />
  <remove name="CDO" type="attribute" />
  <remove name="CDI" type="attribute" />
  <remove name="creation_date" type="attribute" />

  <attribute name="primary_variables" value="{{ ','.join(df[variable].unique()) }}"/>
  <attribute name="size" type="int" value="{{ df[size].sum()|int }}" />
  <attribute name="size_human" value="{{ df[size].sum()|filesizeformat(binary=True) }}" />

  {% if (df[('GLOBALS', '_time_same_coordinate')].dropna().all()) and (not df[('GLOBALS', '_require_custom_time')].any()) %}
  <variable name="time">
    {% for i in df['time'].columns if not (i in ['_values', '_dimensions']) %}
    <attribute name="{{ i }}" value="{{ df[df[frequency] != 'fx'].iloc[0][('time', i)] }}" />
    {% endfor %}
  </variable>
    {% for name,group in df[df[frequency] != 'fx'].groupby((variable)) %}
    {% set spatial_grid = group.iloc[0][('GLOBALS', '_horizontal_coords')] %}
  <variable name="{{ group[variable].iloc[0] }}" shape="time {{ spatial_grid }}">
    <attribute name="version" type="string" value="v{{ ','.join(group[('GLOBALS', '_DRS_version')].unique()|map('string')) }}" />
    <attribute name="tracking_id" type="string" value="{{ ','.join(group[('GLOBALS', 'tracking_id')].dropna()) }}" />
  </variable>
    {% endfor %}
  {% else %}
    {% for name,group in df[df[frequency] != 'fx'].groupby((variable)) %}
    {% set spatial_grid = group.iloc[0][('GLOBALS', '_horizontal_coords')] %}
  <dimension name="time_{{ name }}" length="{{ group[('_d_time', 'size')].sum()|int }}" />
  <variable name="time_{{ name }}" type="double" shape="time_{{ name }}">
    {% for i in group['time'].columns if i not in ['_values', '_dimensions'] %}
    <attribute name="{{ i }}" value="{{ group.iloc[0][('time', i)] }}" />
    {% endfor %}
    <values>{{ group.sort_values(by=[('GLOBALS', '_DRS_period1')])[('time', '_values')]|_values|join(' ') }}</values>
  </variable>
  <variable name="{{ group[variable].iloc[0] }}" shape="time_{{ name }} {{ spatial_grid }}">
    <attribute name="version" type="string" value="v{{ ','.join(group[('GLOBALS', '_DRS_version')].unique()|map('string')) }}" />
    <attribute name="tracking_id" type="string" value="{{ ','.join(group[('GLOBALS', 'tracking_id')].dropna()) }}" />
  </variable>

    {% endfor %}
  {% endif %}

  {% for index,row in df[df[frequency] == 'fx'].iterrows() %}
  <variable name="{{ row[variable] }}" shape="{{ row[('GLOBALS', '_horizontal_coords')] }}">
    <attribute name="version" type="string" value="v{{ row[('GLOBALS', '_DRS_version')] }}" />
    <attribute name="tracking_id" type="string" value="{{ row[('GLOBALS', 'tracking_id')] }}" />
  </variable>
  {% endfor %}

  <aggregation type="union">
    {% for name,group in df[df[frequency] != 'fx'].sort_values(by=[variable]).groupby(variable) %}
    <netcdf>
      <aggregation type="joinExisting" dimName="time">
        {% for index, row in group.sort_values(by=[('GLOBALS', '_DRS_period1')]).iterrows() %}
        <netcdf location="{{ row[localpath] }}" ncoords="{{ row[('_d_time', 'size')]|int }}" />
        {% endfor %}
      </aggregation>
    </netcdf>
    {% endfor %}

    {% for index, row in df[df[frequency] == 'fx']['GLOBALS'].iterrows() %}
    <netcdf location="{{ row['localpath'] }}" />
    {% endfor %}
  </aggregation>
</netcdf>
